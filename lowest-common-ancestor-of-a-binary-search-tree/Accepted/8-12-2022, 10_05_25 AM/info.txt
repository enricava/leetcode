{"id":771732433,"lang":"python3","lang_name":"Python3","time":"1 year, 1 month","timestamp":1660291525,"status":10,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/771732433/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"18.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        while root:\n            if p.val < root.val and q.val < root.val:\n                root = root.left\n            elif p.val > root.val and q.val > root.val :\n                root = root.right\n            else:\n                return root","compare_result":"1111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}