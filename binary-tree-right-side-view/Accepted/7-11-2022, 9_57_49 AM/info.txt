{"id":744085152,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1657526269,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/744085152/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        if not root:\n            return []\n        side = [root.val]\n        q = [root]\n        while q:\n            l = len(q)\n            val = 0\n            ok = False\n            while l > 0:\n                elem = q.pop(0)\n                if elem.left:\n                    q.append(elem.left)\n                    val = elem.left.val\n                    ok = True\n                if elem.right:\n                    q.append(elem.right)\n                    val = elem.right.val\n                    ok = True\n                l -= 1\n            if ok:\n                side.append(val)\n        return side","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}