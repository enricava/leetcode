{"id":744083969,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1657526157,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/744083969/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        if not root:\n            return []\n        side = [root.val]\n        q = [root]\n        while q:\n            l = len(q)\n            i = 0\n            val = 0\n            ok = False\n            while l > 0:\n                elem = q.pop(0)\n                if elem.left:\n                    q.append(elem.left)\n                    vals = elem.left.val\n                    ok = True\n                if elem.right:\n                    q.append(elem.right)\n                    val = elem.right.val\n                    ok = True\n                l -= 1\n            if ok:\n                side.append(val)\n        return side","compare_result":"11110101010110001000000101001100110000010000000001101000100101100000110000000100000011000000000000000001010000011000010000000001000000000000100000011001011110000100100000001100010001000001000001000000000000000100000","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}