{"id":801914585,"lang":"python3","lang_name":"Python3","time":"11 months, 4 weeks","timestamp":1663411017,"status":10,"status_display":"Accepted","runtime":"670 ms","url":"/submissions/detail/801914585/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"54.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def minDepth(self, root: Optional[TreeNode]) -> int:\n        if not root:\n            return 0\n        if not root.right or not root.left:\n            return max(self.minDepth(root.left),self.minDepth(root.right)) + 1\n        return min(self.minDepth(root.left),self.minDepth(root.right)) + 1","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}