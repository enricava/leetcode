{"id":920342279,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1679515171,"status":10,"status_display":"Accepted","runtime":"517 ms","url":"/submissions/detail/920342279/","is_pending":"Not Pending","title":"Minimum Score of a Path Between Two Cities","memory":"140.4 MB","code":"class Solution {\npublic:\n    int dfs(int node,int& ans, vector<vector<pair<int, int>>>& adj, vector<int>& visited){\n        visited[node] = 1;\n        for(auto& [v, dis] : adj[node]){\n            ans = min(ans, dis);\n            if(visited[v]==0){\n                visited[v] = 1;\n                ans = min(ans, dfs(v, ans, adj, visited));\n            }\n        }\n        return ans;\n    }\n\n    int minScore(int n, vector<vector<int>>& roads) {\n        int ans = INT_MAX;\n        vector<vector<pair<int, int>>> adj(n+1);\n        for(auto edge : roads){ \n            adj[edge[0]].push_back({edge[1], edge[2]});\n            adj[edge[1]].push_back({edge[0], edge[2]});\n        }\n\n        vector<int> visited(n+1, 0);\n        dfs(1, ans, adj, visited);\n\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-score-of-a-path-between-two-cities","has_notes":false,"flag_type":1}