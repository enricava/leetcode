{"id":822236755,"lang":"python3","lang_name":"Python3","time":"11Â months","timestamp":1665740355,"status":10,"status_display":"Accepted","runtime":"1909 ms","url":"/submissions/detail/822236755/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"60.7 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        \n        fast = slow = prev = head\n        \n        while fast and fast.next:\n            fast = fast.next.next\n            prev = slow\n            slow = slow.next\n            \n        if prev == slow:\n            head = None\n            \n        prev.next = slow.next\n        \n        return head","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}