{"id":801899541,"lang":"python3","lang_name":"Python3","time":"11 months, 4 weeks","timestamp":1663409156,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/801899541/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\n        if not root:\n            return True\n        return self.isMirrored(root.left, root.right)\n    \n    def isMirrored(self, left: Optional[TreeNode], right: Optional[TreeNode]) -> bool:\n        if not left and not right:\n            return True\n        if not left or not right:\n            return False\n        \n        if left.val == right.val:\n            return self.isMirrored(left.left, right.right) and self.isMirrored(left.right, right.left)\n        return False\n            \n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}