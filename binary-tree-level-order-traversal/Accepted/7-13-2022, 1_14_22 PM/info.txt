{"id":746007807,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1657710862,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/746007807/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        \n        if not root:\n            return []\n        q = [root]\n        levelorder = []\n        while q:\n            l = len(q)\n            level = []\n            while l > 0:\n                n = q.pop(0)\n                l -= 1\n                level.append(n.val)\n                if n.left:\n                    q.append(n.left)\n                if n.right:\n                    q.append(n.right)\n            levelorder.append(level)\n        \n        return levelorder\n            \n            ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}