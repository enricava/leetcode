{"id":749394075,"lang":"python3","lang_name":"Python3","time":"1 year, 1 month","timestamp":1658061495,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/749394075/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        d = {}\n        while head:\n            if head.val in d:\n                return d[head.val]\n            d[head.val] = head\n            head = head.next\n        return None","compare_result":"1111110000000000","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}