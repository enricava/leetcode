{"id":946099915,"lang":"rust","lang_name":"Rust","time":"4 months, 1 week","timestamp":1683469310,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/946099915/","is_pending":"Not Pending","title":"Two Sum","memory":"2.4 MB","code":"use std::collections::HashMap;\nimpl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        let mut comp : HashMap<i32, i32> = HashMap::new();\n        for (i, num) in nums.iter().enumerate() {\n            match comp.get(num){\n                Some(&index) => return vec![index, i as i32],\n                None => comp.insert(target - num, i as i32)\n            };\n        }\n        vec![]\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum","has_notes":false,"flag_type":1}