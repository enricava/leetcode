{"id":792873816,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1662455577,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/792873816/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def pruneTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        \n        def pruneSub(root):\n            \"\"\"\n            True->ok\n            False->remove\n            \"\"\"\n            l, r = False, False\n            if root.left:\n                l = pruneSub(root.left)\n            if root.right:\n                r = pruneSub(root.right)\n                \n            if not l:\n                root.left = None\n            if not r:\n                root.right = None\n            \n            if (root.val != 1 and not l and not r):\n                return False\n            \n            return True\n            \n        if not pruneSub(root):\n            return None\n        return root","compare_result":"111111111111111111111111111111","title_slug":"binary-tree-pruning","has_notes":false,"flag_type":1}