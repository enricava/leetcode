{"id":786402970,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1661788256,"status":10,"status_display":"Accepted","runtime":"511 ms","url":"/submissions/detail/786402970/","is_pending":"Not Pending","title":"Number of Islands","memory":"16.4 MB","code":"class Solution(object):\n    def dfs(self, grid, row, col, r, c):\n        if r < 0 or c < 0 or r >= row or c >= col or grid[r][c] == '0':\n            return \n        grid[r][c] = '0'\n        self.dfs(grid, row, col, r+1, c)\n        self.dfs(grid, row, col, r-1, c)\n        self.dfs(grid, row, col, r, c+1)\n        self.dfs(grid, row, col, r, c-1)\n        \n    def numIslands(self, grid):\n        \"\"\"\n        :type grid: List[List[str]]\n        :rtype: int\n        \"\"\"\n        if not grid:\n            return 0\n        \n        count = 0\n        row = len(grid)\n        col = len(grid[0])\n        for r in range(row):\n            for c in range(col):\n                if grid[r][c] == '1':\n                    self.dfs(grid, row, col, r, c)\n                    count += 1\n        return count","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}